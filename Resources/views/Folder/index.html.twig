{# src/Arii/JOCBundle/Resources/views/index.html.twig #}
{% extends "AriiDocBundle::layout.html.twig" %}
{% block body %}
<!--[if !IE]>start section<![endif]-->	
<script>
var file='';
dhtmlxEvent(window,"load",function(){     

    globalLayout = new dhtmlXLayoutObject(document.body, "3L");
    globalLayout.cells("a").hideHeader();
    globalLayout.cells("a").setWidth(420);
//    globalLayout.cells("c").collapse();
    globalLayout.cells("c").setText("{{ "Edit" | trans }}");
    
    globalMenu = globalLayout.cells("a").attachMenu();
    globalMenu.setIconsPath( "{{ asset('/bundles/ariicore/images/menu/') }}" );
    globalMenu.loadStruct("{{ url('xml_menu') }}?route={{ app.request.attributes.get('_route') }}");

    myRibbon = globalLayout.cells("a").attachRibbon(); 
    myRibbon.setIconPath( "{{ asset('bundles/ariicore/images/ribbon/') }}" );
    myRibbon.loadStruct("{{ url('json_Doc_ribbon') }}");
    myRibbon.attachEvent("onStateChange", StateRibbon );
    myRibbon.attachEvent("onClick", ClickRibbon );
/*    
    myMenu = new dhtmlXMenuObject();
    myMenu.renderAsContextMenu();
    myMenu.setIconsPath( "{{ asset('/bundles/ariicore/images/menu/') }}" );
    myMenu.loadStruct("{{ url('xml_Doc_menu') }}");
*/
    myGrid = globalLayout.cells("a").attachGrid();
    myGrid.selMultiRows = true;
    myGrid.setImagePath( "{{ asset('bundles/ariicore/images/treegrid/') }}");

    myGrid.setHeader("{{ path }}");
    myGrid.attachHeader("#text_filter");
    myGrid.setInitWidths("*");
    myGrid.setColAlign("left");
    myGrid.setColTypes("ro");
    myGrid.setColSorting("str");
    myGrid.enableAlterCss("","");
    myGrid.init();

    myGlobalTab = globalLayout.cells("b").attachTabbar();
    myGlobalTab.addTab("doc","{{ "Document" | trans }}","100px", null, true);        
    myGlobalTab.addTab("file","{{ "Original" | trans }}","100px");        

    myGridToolbar = myGlobalTab.cells("doc").attachToolbar();
    myGridToolbar.setIconsPath("{{ asset('bundles/ariicore/images/toolbar/') }}");
    myGridToolbar.loadStruct( "{{ url('xml_Doc_folder_toolbar') }}");
    myGridToolbar.attachEvent("onClick",function(itemid){
         switch (itemid) {
                case 'delete':
                    dhtmlx.confirm({
                    title: "{{ "Delete" | trans }}",
                    type: "confirm-error",
                    text: "{{ "Are you sure ?" | trans }}",
                    callback: function(answer) { 
                        if (answer) {      
                            globalLayout.progressOn();
                            dhx4.ajax.get("{{ url('xml_Doc_doc_delete') }}?file="+file,function(loader){
                                if(loader.xmlDoc.responseText==="success"){
                                    myGlobalTab.cells("doc").attachURL('{{ url('html_Doc_doc') }}?file='+encodeURIComponent(file));
                                    dhtmlx.message({
                                       title:"Save",
                                       type: "Notice",
                                       lifetime: "60000",
                                       text: "{{ "Deleted" | trans }}"
                                    });                                
                                }
                                else {
                                    dhtmlx.message({
                                       title:"Save",
                                       type: "Error",
                                       lifetime: "60000",
                                       text: loader.xmlDoc.responseText
                                    });    
                                }
                                globalLayout.progressOff();
                            });
                        }
                    },
                    cancel: "{{ "No" | trans }}",
                    ok: "{{ "Yes" | trans }}" });
                break;
            case 'refresh':
                globalLayout.cells("b").progressOn();
                globalLayout.cells("c").progressOn();
                GlobalRefresh();
                break;
            case 'pdf':
                window.open('{{ url('pdf_Doc_doc') }}?file='+encodeURIComponent(file),'pdf');
                break;
            default:
                alert(itemid);
                break;
        }
    });

    globalLayout.cells("b").hideHeader();
    myGlobalTab.cells("doc").attachURL('{{ asset('/bundles/ariicore/images/arii.jpg') }}');

    myLayout = globalLayout.cells("c").attachLayout("2U");
    myLayout.cells("a").hideHeader();
    myLayout.cells("b").hideHeader();
            
    myTab = myLayout.cells("a").attachTabbar();
    myTab.addTab("messages","{{ "Messages" | trans }}","100px", null, true);        
    myTab.addTab("help","{{ "Notes" | trans }}","100px");        

    myList = myTab.cells("messages").attachGrid();
    myList.selMultiRows = true;
    myList.setImagePath( "{{ asset('bundles/ariicore/images/treegrid/') }}");
    myList.setHeader("{{ "Part" | trans }},{{ "Message" | trans }},{{ "Exit" | trans }}");
    myList.attachHeader("#text_filter,#text_filter,#select_filter");
    myList.setInitWidths("200,*,0");
    myList.setColAlign("left,left,right");
    myList.setColTypes("ro,ro,ro");
    myList.setColSorting("str,str,str");
    myList.enableAlterCss("","");    
    myList.init();

    myHelp = myTab.cells("help").attachGrid();
    myHelp.selMultiRows = true;
    myHelp.setImagePath( "{{ asset('bundles/ariicore/images/treegrid/') }}");
    myHelp.setHeader("{{ "Message" | trans }},{{ "Note" | trans }}");
    myHelp.attachHeader("#text_filter,#text_filter");
    // myHelp.setInitWidths("*,*");
    myHelp.setColAlign("left,left");
    myHelp.setColTypes("ro,ro");
    myHelp.setColSorting("str,str");
    myHelp.enableAlterCss("","");    
    myHelp.init();

    formData = [
        { type: "settings", position: "label-left", labelWidth: 70, inputWidth: 600,labelAlign: "right" },
        { type: "hidden",
          name: "ID"
        },         
        { type: "hidden",
          name: "CALL_ID"
        },
        {  type: "input",
            name: "TITLE",
            label: "{{ "Title" | trans }}"
         },
        {  type: "input",
            name: "DESCRIPTION",
            label: "{{ "Description" | trans }}",
            rows: 2
         },
        {  type: "input",
            name: "TRIGGERS",
            label: "{{ "Triggers" | trans }}"
        },
        {  type: "input",
            name: "CONSTRAINTS",
            label: "{{ "Constraints" | trans }}"
        },
        {  type: "input",
            name: "INSTRUCTIONS",
            label: "{{ "Instructions" | trans }}",
            rows: 10
         },
         {  type: "checkbox",
            name: "VALIDATED",
            label: "{{ "Validated" | trans }}"
         },
         {  type: "checkbox",
            name: "RESTART",
            label: "{{ "Restart point" | trans }}"
         }
     ];
    myForm = myLayout.cells("b").attachForm(formData);
    myForm.enableLiveValidation(true);

    myFormToolbar = myLayout.cells("b").attachToolbar();
    myFormToolbar.setIconsPath("{{ asset('bundles/ariicore/images/toolbar/') }}");
    myFormToolbar.loadStruct( "{{ url('xml_Doc_form_toolbar') }}");
    myFormToolbar.attachEvent("onClick",function(itemid){
         switch (itemid) {
                case 'delete':
                    dhtmlx.confirm({
                    title: "{{ "Delete" | trans }}",
                    type: "confirm-error",
                    text: "{{ "Are you sure ?" | trans }}",
                    callback: function(answer) { 
                        if (answer) {      
                            globalLayout.progressOn();
                            dhx4.ajax.get("{{ url('xml_Doc_user_delete') }}?id="+myForm.getValue('ID'),function(loader){
                                if(loader.xmlDoc.responseText==="success"){
                                    dhtmlx.message({
                                       title:"Save",
                                       type: "Notice",
                                       lifetime: "60000",
                                       text: "{{ "Deleted" | trans }}"
                                    });                                
                                }
                                globalLayout.progressOff();
                            });
                        }
                    },
                    cancel: "{{ "No" | trans }}",
                    ok: "{{ "Yes" | trans }}" });
                break;
            case 'save':
                myLayout.cells("b").progressOn();
                myLayout.cells("a").progressOn();
                myForm.send("{{ url('xml_Doc_user_save') }}","POST",function(loader,response){
                    dhtmlx.message({
                    type: "Notice",
                    expire: 10000,
                    width: "500px",
                    text: loader.xmlDoc.responseText });
                    myLayout.cells("b").progressOn();
                    myGlobalTab.cells("doc").attachURL('{{ url('html_Doc_doc') }}?file='+encodeURIComponent(file));
                    myList.clearAll();
                    myList.load("{{ url('xml_Doc_file_grid') }}?file="+encodeURIComponent(file), function() {
                        myLayout.cells("a").progressOff();
                    });                    
                    myLayout.cells("b").progressOff();
                });
                break;
            default:
                alert(itemid);
                break;
        }
    });

    myGrid.load( "{{ url('xml_Doc_folder_list') }}?folder={{ path }}");
    myGrid.attachEvent("onRowDblClicked", function(id) {
        globalLayout.cells("c").expand();
        file = id;
        myGlobalTab.cells("doc").attachURL('{{ url('html_Doc_doc') }}?file='+encodeURIComponent(id));
        myList.clearAll();
        myList.load("{{ url('xml_Doc_file_grid') }}?file="+encodeURIComponent(id), function () {
            myHelp.clearAll();
            myHelp.load("{{ url('xml_Doc_help_grid') }}?file="+encodeURIComponent(id), function () {
                myGlobalTab.cells("file").attachURL('{{ url('html_Doc_file') }}?file='+encodeURIComponent(id));
            });
        });
    });
    
    myList.attachEvent("onRowDblClicked", function(id) {
        myLayout.cells("b").progressOn();
        myForm.load("{{ url('xml_Doc_file_form') }}?id="+id, function() {
            myLayout.cells("b").progressOff();            
        });
    });
    
    // Charger une note comme consigne par défaut
    myHelp.attachEvent("onRowDblClicked", function(id) {
        myLayout.cells("b").progressOn();
        myForm.load("{{ url('xml_Doc_help_form') }}?id="+id, function() {
            myLayout.cells("b").progressOff();            
        });
    });

    globalLayout.cells("b").attachEvent("onContentLoaded", function(id){
        // globalLayout.cells("b").progressOff();
    });    
});

function GlobalRefresh() {

}
</script>
{% endblock %}
